body file control
{
        namespace => "rhel_7_stig";
}
bundle agent config
{
  vars:
      "inventory_attribute"
        string => "RHEL 7 STIG findings";

      "inventory_attribute_exception"
        string => "RHEL 7 STIG findings with exception";

      # This variable expects to be overridden by module input (Augments)
      # When warn, enforcement
      "mode"
        string => "warn", # (warn|enforce)
        if => not( isvariable( "$(this.namespace):$(this.bundle).mode") );

      "context"
        string => "centos_7|redhat_7",
        if => not( isvariable( "$(this.namespace):$(this.bundle).context") );


      # Module input may define exceptions in this bundle scope:
      # rhel_7_stig:config.exceptions            [{"context":"any","id":"V-204443","why":"Old skool cool."}]  source=augments_file                     Added by 'cfbs input'
}
bundle agent exceptions
{
  vars:
      # We expect variables to be defined in this bundle scope to document exceptions
      # rhel_7_stig.exceptions.V_204443 string => "Exception because reason";

      # Module input can define an array of objects allowing the user to interactively specify exceptions.
      # rhel_7_stig:config.exceptions            [{"context":"any","id":"V-204443","why":"Old skool cool."}]  source=augments_file                     Added by 'cfbs input'

      # We need to define the expected variables if they are not already defined.

      "i" slist => getindices( "rhel_7_stig:config.exceptions" );

      "$(with)"
        string => "$(rhel_7_stig:config.exceptions[$(i)][why])",
        with => canonify( "$(rhel_7_stig:config.exceptions[$(i)][id])" ),
        if => "$(rhel_7_stig:config.exceptions[$(i)][context])";

}
bundle agent run
{
  classes:

      "enabled"
        expression => "$($(this.namespace):config.context)",
        scope => "namespace",
        meta => { "report" }; # So that compliance conditions can be targeted.

      # If rhel_7_stig.config.mode is set to enforce we define the class to enable enforcement for all findings
      "enforced"
        expression => regcmp( "(?i)enforce", "$($(this.namespace):config.mode)");

  vars:
    rhel_7_stig:enabled::
      # Find the inventory bundles
      "bundles"
        slist => bundlesmatching( "$(this.namespace):V_.*" );

  methods:

    (rhel_7_stig:enabled.rhel_7_stig:chaos_enabled)::
      "rhel_7_stig:chaos"
        inherit => "true";

    rhel_7_stig:enabled::
      "$(bundles)"
        inherit => "true";

  reports:
    rhel_7_stig:enabled.(rhel_7_stig:DEBUG|rhel_7_stig:DEBUG_run)::
      "Found bundle: $(bundles)";
}
