body file control
{
        namespace => "rhel_7_stig";
}
bundle agent V_204424
{
  classes:
    rhel_7_stig:enabled::

      "$(this.bundle)_enforced"
        expression => "$(this.namespace):enforced";

      "$(this.bundle)_exception"
        expression => isvariable( "$(this.namespace):exceptions.$(this.bundle)" );

      "$(this.bundle)_finding"
        expression => regline( "^(?!#).* nullok ?.*",
                       $(files));
  vars:

    rhel_7_stig:enabled::


      "files"
        slist => { "/etc/pam.d/system-auth",
                   "/etc/pam.d/password-auth" };

      # We consider it a finding if any non-comment line contains nullok
      # preceded by a space, there may or may not be a space after it.

      "finding"
        string => "V-204424",
        meta => { "inventory",
                  "attribute_name=$($(this.namespace):config.inventory_attribute)" },
        if => and( "$(this.namespace):$(this.bundle)_finding",
                   not( "$(this.namespace):$(this.bundle)_exception" ) );

      "finding_with_exception"
        string => "V-204424",
        meta => { "inventory",
                  "attribute_name=$($(this.namespace):config.inventory_attribute_exception)" },
        if => and( "$(this.namespace):$(this.bundle)_finding",
                   "$(this.namespace):$(this.bundle)_exception" );

  reports:
    rhel_7_stig:enabled::
      "$(this.namespace):$(this.bundle) is Enforcing without exception but automatic remediation is not available"
        if => and( "$(this.namespace):$(this.bundle)_enforced",
                   not( "$(this.namespace):$(this.bundle)_exception" ) );

    rhel_7_stig:DEBUG::
      "DEBUG $(this.namespace):$(this.bundle): Found" if => isvariable( finding );

}
